// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_scoring_scoring_product (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        size,
        result_i,
        result_o,
        result_o_ap_vld,
        in1_stream_dout,
        in1_stream_num_data_valid,
        in1_stream_fifo_cap,
        in1_stream_empty_n,
        in1_stream_read,
        in2_stream_dout,
        in2_stream_num_data_valid,
        in2_stream_fifo_cap,
        in2_stream_empty_n,
        in2_stream_read,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n,
        grp_fu_186_p_din0,
        grp_fu_186_p_din1,
        grp_fu_186_p_opcode,
        grp_fu_186_p_dout0,
        grp_fu_186_p_ce,
        grp_fu_190_p_din0,
        grp_fu_190_p_din1,
        grp_fu_190_p_dout0,
        grp_fu_190_p_ce
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] size;
input  [31:0] result_i;
output  [31:0] result_o;
output   result_o_ap_vld;
input  [31:0] in1_stream_dout;
input  [1:0] in1_stream_num_data_valid;
input  [1:0] in1_stream_fifo_cap;
input   in1_stream_empty_n;
output   in1_stream_read;
input  [31:0] in2_stream_dout;
input  [1:0] in2_stream_num_data_valid;
input  [1:0] in2_stream_fifo_cap;
input   in2_stream_empty_n;
output   in2_stream_read;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;
output  [31:0] grp_fu_186_p_din0;
output  [31:0] grp_fu_186_p_din1;
output  [1:0] grp_fu_186_p_opcode;
input  [31:0] grp_fu_186_p_dout0;
output   grp_fu_186_p_ce;
output  [31:0] grp_fu_190_p_din0;
output  [31:0] grp_fu_190_p_din1;
input  [31:0] grp_fu_190_p_dout0;
output   grp_fu_190_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] result_o;
reg result_o_ap_vld;
reg in1_stream_read;
reg in2_stream_read;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [30:0] empty_fu_47_p1;
reg   [30:0] empty_reg_72;
wire   [0:0] icmp_ln15_fu_52_p2;
reg   [0:0] icmp_ln15_reg_83;
wire    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_start;
wire    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_done;
wire    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_idle;
wire    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_ready;
wire   [31:0] grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_add5_i_out;
wire    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_add5_i_out_ap_vld;
wire    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_in1_stream_read;
wire    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_in2_stream_read;
wire    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_ext_blocking_n;
wire    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_str_blocking_n;
wire    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_int_blocking_n;
wire   [31:0] grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_90_p_din0;
wire   [31:0] grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_90_p_din1;
wire   [1:0] grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_90_p_opcode;
wire    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_90_p_ce;
wire   [31:0] grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_94_p_din0;
wire   [31:0] grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_94_p_din1;
wire    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_94_p_ce;
reg    grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_fu_90_ce;
reg    grp_fu_94_ce;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ext_blocking_sub_n;
reg    ap_wait_0;
reg    ap_sub_ext_blocking_0;
reg    ap_str_blocking_sub_n;
reg    ap_sub_str_blocking_0;
reg    ap_int_blocking_sub_n;
reg    ap_sub_int_blocking_0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_start_reg = 1'b0;
end

krnl_scoring_scoring_product_Pipeline_VITIS_LOOP_15_1 grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_start),
    .ap_done(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_done),
    .ap_idle(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_idle),
    .ap_ready(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_ready),
    .result_load(result_i),
    .size(empty_reg_72),
    .add5_i_out(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_add5_i_out),
    .add5_i_out_ap_vld(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_add5_i_out_ap_vld),
    .in1_stream_dout(in1_stream_dout),
    .in1_stream_num_data_valid(2'd0),
    .in1_stream_fifo_cap(2'd0),
    .in1_stream_empty_n(in1_stream_empty_n),
    .in1_stream_read(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_in1_stream_read),
    .in2_stream_dout(in2_stream_dout),
    .in2_stream_num_data_valid(2'd0),
    .in2_stream_fifo_cap(2'd0),
    .in2_stream_empty_n(in2_stream_empty_n),
    .in2_stream_read(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_in2_stream_read),
    .ap_ext_blocking_n(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_str_blocking_n),
    .ap_int_blocking_n(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_int_blocking_n),
    .grp_fu_90_p_din0(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_90_p_din0),
    .grp_fu_90_p_din1(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_90_p_din1),
    .grp_fu_90_p_opcode(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_90_p_opcode),
    .grp_fu_90_p_dout0(grp_fu_186_p_dout0),
    .grp_fu_90_p_ce(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_90_p_ce),
    .grp_fu_94_p_din0(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_94_p_din0),
    .grp_fu_94_p_din1(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_94_p_din1),
    .grp_fu_94_p_dout0(grp_fu_190_p_dout0),
    .grp_fu_94_p_ce(grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_94_p_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (icmp_ln15_fu_52_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_start_reg <= 1'b1;
        end else if ((grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_ready == 1'b1)) begin
            grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_72 <= empty_fu_47_p1;
        icmp_ln15_reg_83 <= icmp_ln15_fu_52_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_wait_0 & ap_sub_ext_blocking_0) == 1'b1)) begin
        ap_ext_blocking_sub_n = 1'b0;
    end else begin
        ap_ext_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_wait_0 & ap_sub_int_blocking_0) == 1'b1)) begin
        ap_int_blocking_sub_n = 1'b0;
    end else begin
        ap_int_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_wait_0 & ap_sub_str_blocking_0) == 1'b1)) begin
        ap_str_blocking_sub_n = 1'b0;
    end else begin
        ap_str_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_0 = 1'b1;
    end else begin
        ap_sub_ext_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_0 = 1'b1;
    end else begin
        ap_sub_int_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_0 = 1'b1;
    end else begin
        ap_sub_str_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state2 == ap_CS_fsm)) begin
        ap_wait_0 = 1'b1;
    end else begin
        ap_wait_0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_90_ce = grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_90_p_ce;
    end else begin
        grp_fu_90_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_94_ce = grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_94_p_ce;
    end else begin
        grp_fu_94_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in1_stream_read = grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_in1_stream_read;
    end else begin
        in1_stream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in2_stream_read = grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_in2_stream_read;
    end else begin
        in2_stream_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln15_reg_83 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        result_o = grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_add5_i_out;
    end else begin
        result_o = result_i;
    end
end

always @ (*) begin
    if (((icmp_ln15_reg_83 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        result_o_ap_vld = 1'b1;
    end else begin
        result_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (icmp_ln15_fu_52_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((ap_start == 1'b1) & (icmp_ln15_fu_52_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & 1'b1);

assign ap_int_blocking_n = (ap_int_blocking_sub_n & 1'b1);

assign ap_str_blocking_n = (ap_str_blocking_sub_n & 1'b1);

assign empty_fu_47_p1 = size[30:0];

assign grp_fu_186_p_ce = grp_fu_90_ce;

assign grp_fu_186_p_din0 = grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_90_p_din0;

assign grp_fu_186_p_din1 = grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_90_p_din1;

assign grp_fu_186_p_opcode = 2'd0;

assign grp_fu_190_p_ce = grp_fu_94_ce;

assign grp_fu_190_p_din0 = grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_94_p_din0;

assign grp_fu_190_p_din1 = grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_grp_fu_94_p_din1;

assign grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_start = grp_scoring_product_Pipeline_VITIS_LOOP_15_1_fu_36_ap_start_reg;

assign icmp_ln15_fu_52_p2 = (($signed(size) > $signed(32'd0)) ? 1'b1 : 1'b0);

endmodule //krnl_scoring_scoring_product
